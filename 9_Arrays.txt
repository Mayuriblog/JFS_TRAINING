							Arrays
							======
Array is a collection of variables of the same type (homogeneous).

In an application if we want to declare many variables of similar data type then instead of declaring them individually, we can declare array of the same type. For example in GUI application if we want to generate a screen with 15 X 10 text fields, we need to declare 150 text fields with unique name; instead we can declare one TextField array.

JTextField jt[] = new JTextField[150];
int engMarks[] = new int[100];
String studNames[] = new String[100];

Single / Scalar variable declaration:
-------------------------------------
int i=10;
long l=1234;
double d=12.34;
char ch='A';
String sname="Surya";

Individual variable declarations
int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10;
int i11, i12, i13, i14, i15, i16, i17, i18, i19, i20;
int i21, i22, i23, i24, i25, i26, i27, i28, i29, i30;
int i31, i32, i33, i34, i35, i36, i37, i38, i39, i40;in
int att[]=new int[72];
att[0]=1;
att[1]=2;

and initializations:
i1=10;
i2=20;
i3=30;

another way of declaring and initialization variables:
int i1=10, i2=20, i3=30, i4=40, i5=50, i6=60, i7=70, i8=80, i9=90, i10=100;

Array variable declaration:
---------------------------
static array declaration & initialization:
------------------------------------------
int i[]=new int[10];
	(or)
int[] i=new int[10]; // array variable declaration

i[0]=10;
i[1]=20;
i[2]=30;
i[3]=40;
i[4]=50;
i[5]=60;
i[6]=70;
i[7]=80;
i[8]=90;
i[9]=100; // array variables initialization

dynamic array declaration & initialization:
-------------------------------------------
int i[] = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100};
				(or)
int[] i = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100};


How to print above array using length property:
-----------------------------------------------
System.out.println(i[7]+" "+i[8]+" "+i[9]);

System.out.println(i[7]);
System.out.println(i[8]);
System.out.println(i[9]);

int len=i.length; // array is having a property called length
for(int j=0;j<len;j++) {
	System.out.println(i[j]);
}

JDK 1.5 introduced for-each loop/enhanced for-loop:
---------------------------------------------------
for(int j:i) {
	System.out.println(j);
}

*************************************************************
for-each loop eases the program retrieving data/element from the array.
*************************************************************

But dealing with array index is confusing and error prone also, they are fixed in size are couple of limitations.

Arrays can be declared on primitive data types, on objects and on other arrays also. There are homogeneous, fixed in size.

declaring array:
int i[];
  (or)
int[] i;

Note: the default value is null, if try to access i NullPointerException araises.

constructing array:
i=new int[10];
   (or)
int i[]=new int[10];
int[] i=new int[10];
   
Note: In i[] at all indexes 0 will be initialized as default value.
   
initializing array:
while initializing we need to access array index from 0 to length-1 index. array size can be found using length property. int len=i.length;
i[0]=1;
i[1]=2;
i[8]=9;
i[9]=10;
    (or)
int i[]={1,2,3,4,5,6,7,8,9,10};
int[] i={1,2,3,4,5,6,7,8,9,10};

to access them:
System.out.println(i[0]);
System.out.println(i[1]);

int len=i.length;
for(int j=0;j<len;j++) {
   System.out.println(i[j]);


Note: If array is accessed beyond its index ArrayIndexOutOfBoundsException raises.

Above arrays are single dimensional arrays.

// IDArrayEx.java
class IDArrayEx {
	public static void main(String rags[]) {
		int i[]={10, 20, 30, 40, 50, 60, 70, 80, 90, 100};
		System.out.println(i[7]);
		
		// old way of fetching array
		int len=i.length; // length is a property in array
		for(int j=0;j<len;j++) {
			System.out.println(i[j]);
		}
	
		// enhanced for-loop/for-each loop
		for(int k:i) {
			System.out.println(k);
		}
	}
}

I want to declare one dimensional array as below:
----------------------------------------------------------------
     0 1 2 3 4

Two dimensional array declaration is as follows:
------------------------------------------------
      0 1 2 3 4
j[0] 1 2 3 4 5
j[1] 6 7 8 9 10
j[2] 11 12 13 14 15
j[3] 16 17 18 19 20

// IIDArrayEx.java
public class IIDArrayEx {
  public static void main(String rags[]) {
    int j[][]=new int[4][5];

	j[0][0]=1;
	j[0][1]=2;
	j[0][2]=3;
	j[0][3]=4;
	j[0][4]=5;

	j[1][0]=6;
	j[1][1]=7;
	j[1][2]=8;
	j[1][3]=9;
	j[1][4]=10;

	j[2][0]=11;
	j[2][1]=12;
	j[2][2]=13;
	j[2][3]=14;
	j[2][4]=15;

	j[3][0]=16;
	j[3][1]=17;
	j[3][2]=18;
	j[3][3]=19;
	j[3][4]=20;
	
	int counter=0;
	for(int k=0;k<4;k++) {
		for(int l=0;l<5;l++) {	
			j[k][l]=counter++;
		}
	}

	System.out.println(j.length);
	System.out.println(j[0].length);
	
	for(int k=0;k<j.length;k++) {
		for(int m=0;m<j[k].length;m++) {
			System.out.println(j[k][m]);
		}
	}
  }
}

Another example on IIDArray:
----------------------------
IIDArray:
---------
3X4 3 rows 4 columns

	0 1 2 3
	
0	1 2 3 4
	- - - -
1	5 6 7 8
	- - - -
2	9 10 11 12
	- -  -  -

// IIDArrayEx1.java
class IIDArrayEx1 {
	public static void main(String rags[]) {
	
		// 2 dimensional array
		// static array declaration and initialization
		int i[][]=new int[3][4];
		i[0][0]=1;
		i[0][1]=2;
		i[0][2]=3;
		i[0][3]=4;

		i[1][0]=5;
		i[1][1]=6;
		i[1][2]=7;
		i[1][3]=8;

		i[2][0]=9;
		i[2][1]=10;
		i[2][2]=11;
		i[2][3]=12;

		// dynamic array declaration and initialization
		int j[][]={{1,2,3,4}, {5,6,7,8}, {9,10,11,12}};

		int len1=i.length; // 3
		for(int k=0;k<len1;k++) {
			// in first iteration 0th index, in second iteration 1st index and soon
			int len2=i[k].length; // 4
			
			for(int m=0;m<len2;m++) {
				System.out.println(i[k][m]);
			}
		}

		System.out.println("****************************************");

		// enhanced for loop/for-each loop
		for(int n[]:j) {
			for(int o:n) {
				System.out.println(o);
			}
		}
		
	}
}



Declare, initialize and print 3 dimensional array:
--------------------------------------------------
3x4x5:
------
int i[][][]=new int[3][4][5];

		i[0][0]				i[0][1]			i[0][2]		i[0][3]
			i[0][0][0]			i[0][1][0]		
			i[0][0][1]			i[0][1][1]
			i[0][0][2]			i[0][1][2]
			i[0][0][3]			i[0][1][3]
			i[0][0][4]			i[0][1][4]
i[0]
i[1]
i[2]

	1			2		3		4
	 1.1	 	2.1	 	3.1	 	4.1 
	 1.2	 	2.2	 	3.2	 	4.2
	 1.3 	 	2.3	 	3.3	 	4.3
	 1.4	 	2.4	 	3.4	 	4.4
	 1.5     	2.5	 	3.5	 	4.5

	5			6		7		8
	 5.1	 	6.1	 	7.1	 	8.1 
	 5.2	 	6.2	 	7.2	 	8.2
	 5.3 	 	6.3	 	7.3	 	8.3
	 5.4	 	6.4	 	7.4	 	8.4
	 5.5     	6.5	 	7.5	 	8.5

	9			10		11		12
	 9.1	 	10.1	11.1	12.1 
	 9.2	 	10.2	11.2	12.2
	 9.3 	 	10.3	11.3	12.3
	 9.4	 	10.4	11.4	12.4
	 9.5     	10.5	11.5	12.5
	 
Do 3x4x5 example on your own

Another Example 3DArray:
------------------------
1DArray: {1,2,3,4,5,6,7,8,9,10}

2DArray: 2x3: { {1,2,3}, {4,5,6} }

2 rows, 3 columns

	0 1 2
0	1 2 3
1	4 5 6

3DArray: 2x3x4: 
{ 
  {	{1,2,3,4}, {5,6,7,8}, {9,10,11,12} }, 
  { {13,14,15,16}, {17,18,19,20}, {21,22,23,24} } 
}

2 rows, 3 columns, 4 rows

	   0 		1 		2
-----------------------------
0	[0]1		5		9
	[1]2		6		10
	[2]3		7		11
	[3]4		8		12

1	[0]13		17		21
	[1]14		18		22
	[2]15		19		23
	[3]16		20		24

// IIIDArrayEx1.java
class IIIDArrayEx1 {
	public static void main(String rags[]) {
	
		int i[][][]=new int[2][3][4];
		
		i[0][0][0]=1;
		i[0][0][1]=2;
		i[0][0][2]=3;
		i[0][0][3]=4;
		
		i[0][1][0]=5;
		i[0][1][1]=6;
		i[0][1][2]=7;
		i[0][1][3]=8;
		
		i[0][2][0]=9;
		i[0][2][1]=10;
		i[0][2][2]=11;
		i[0][2][3]=12;
		
		i[1][0][0]=13;
		i[1][0][1]=14;
		i[1][0][2]=15;
		i[1][0][3]=16;
		
		i[1][1][0]=17;
		i[1][1][1]=18;
		i[1][1][2]=19;
		i[1][1][3]=20;
		
		i[1][2][0]=21;
		i[1][2][1]=22;
		i[1][2][2]=23;
		i[1][2][3]=24;

		System.out.println("*********************************");
		int len1=i.length; // 2 rows
		
		for(int j=0;j<len1;j++) { // 2 times iterate
			int len2=i[j].length; 
			// i[j] row no, first iteration i[0], second iteration i[1], i[j].length gives 3 columns
			
			for(int k=0;k<len2;k++) { // 3 times iterate
				int len3=i[j][k].length; 
				// i[j][k] means 0 row, 0 column in first itreation gives 4 rows
				
				for(int m=0;m<len3;m++) { // 4 iterate
					System.out.print(i[j][k][m]+"  ");
				}
				System.out.print("    ");
			}
			System.out.println();
		}
		
		System.out.println("*********************************");
		
		for(int j[][]:i) { // j[] 2 rows comes
			for(int k[]:j) { // k[] 3 columns comes
				for(int m:k) { // m[] 4 rows comes
					System.out.print(m+"  ");
				}
				System.out.print("\t");
			}
			System.out.println();
		}
		System.out.println("*********************************");
		
	}
}
